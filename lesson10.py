# # ### Переменные, типы данных и базовые операции ###
# #
# # # Легкие:
# # 1. Создайте переменную `age` и присвойте ей ваш возраст. Выведите ее.
# # age = int(input("Возраст: "))
# # print(age)
#
# # 2. Перемножьте два числа `5` и `7`, результат сохраните в переменную `result`.
# # a = 5
# # b = 7
# # print(a + b)
#
# # 3. Преобразуйте число `10` в строку и выведите его тип.
# # s = 10
# # print(str(s))
# # # 4. Сложите строки `"Hello"` и `"World"` с пробелом между ними.
# # str1 = "Hello"
# # str2 = "World"
# # print(str1 + " " + str2)
#
# # 5. Проверьте, является ли `100` больше `99` (выведите `True` или `False`).
# # print(100 > 99)
#
# # # Средние:
# # 6. Даны две переменные: `a = 10`, `b = 3`. Найдите результат деления `a` на `b` с остатком.
# # a = 10
# # b = 3
# # print(a % b)
# # # 7. Пользователь вводит два числа. Выведите их сумму.
# # print(a * b)
# #
# # # 8. Преобразуйте строку `"123"` в число и умножьте на `2`.
# # s = "123"
# # print(int(s) * 2)
# # # 9. Сравните строки `"apple"` и `"Apple"` (равны ли они?).
# # s1 = "apple"
# # s2 = "Apple"
# # print(s1 == s2)
# # 10. Дано число `15.8`. Округлите его до целого.
# # s = 15.8
# # print(int(s))
# #
# # # Сложные:
# # 11. Напишите код, который меняет значения двух переменных местами.
# # s =
#
# # 12. Вычислите среднее арифметическое трех чисел.
# # s = [10, 30, 40]
# # print(sum(s) // 3)
# # # 13. Проверьте, является ли строка `"12345"` числом (используйте методы строк).
# # s = "12345"
# # print(str(s))
# # 14. Дано число `1001`. Проверьте, является ли оно палиндромом (читается одинаково слева направо).
# # s = [1001]
# # print(s[0::-1])
# # 15. Сгенерируйте случайное число от `1` до `100` (используйте модуль `random`).
# #
# # ### Ввод и вывод данных ###
# #
# # # Легкие:
# # 16. Пользователь вводит имя. Выведите `"Привет, [имя]!"`.
# # s = input("name: ")
# # print("Hi", s )
# # 17. Запросите у пользователя возраст и выведите его через 5 лет.
# # s = input("Your age: ")
# # print(int(s) + 5)
# # # 18. Напишите программу, которая спрашивает любимый цвет и выводит его в верхнем регистре.
# # s = input("color: ")
# # print(s.title())
# # # 19. Запросите два числа и выведите их произведение.
# # s = 3
# # d = 4
# # print(s * d)
# # 20. Выведите текущую дату (используйте модуль `datetime`).
# #
# # # Средние:
# # 21. Пользователь вводит строку. Выведите ее длину.
# # s = input("str: ")
# # print(len(s))
# # 22. Запросите число и проверьте, четное ли оно.
# # s = input("число: ")
# # print(int(s) / 2)
# # 23. Напишите программу-калькулятор для двух чисел (+, -, *, /).
# # s = input("list: ")
# # a = input("+, -, *, /")
# # d = input("list: ")
# # # # 24. Пользователь вводит предложение. Разбейте его на слова (список).
# # s = input("предложение: ")
# # print()
# # # 25. Преобразуйте введенную строку в обратном регистре (большие → маленькие и наоборот).
# # s = input("String: ")
# #
# # # # Сложные:
# # # 26. Запросите пароль. Если длина меньше 8 символов, выведите ошибку.
# # password = input("Password: ")
# # if len(password) < 8:
# #     print("Error")
# #
# # # 27. Напишите программу, которая проверяет, является ли введенная строка палиндромом.
# # s = input("word: ")
# # print(s == s[::-1])
# # # 28. Конвертируйте введенное количество градусов Цельсия в Фаренгейты.
# #
# # # 29. Запросите число и выведите его квадрат, куб и квадратный корень.
# # s = float(input("Введите число: "))
# # print("Квадрат:", s ** 2)
# # print("Куб:", s ** 3)
# # print("Корень:", s ** 0.5)
# # 30. Создайте программу, которая генерирует случайный пароль (из букв и цифр).
#
# # ### Списки ###
# #
# # # Легкие:
# # 31. Создайте список чисел от `1` до `5` и выведите его.
# # s1 = [1, 2, 3, 4, 5, 6]
# # print(s1)
# # # 32. Добавьте число `6` в конец списка.
# # s1.append(6)
# # print(s1)
# # # 33. Выведите второй элемент списка `["яблоко", "банан", "вишня"]`.
# # fruits = ["яблоко", "банан", "вишня"]
# # print(fruits[1])
# # 34. Удалите первый элемент списка `[10, 20, 30, 40]`.
# # s = [10, 20, 30, 40]
# # s.pop(0)
# # print(s)
# #
# # # 35. Проверьте, есть ли `"кофе"` в списке `["чай", "вода", "сок"]`.
# # drinks = ["чай", "вода", "сок"]
# # print("кофе" in drinks)
# #
# # # # Средние:
# # # 36. Дан список `[3, 1, 4, 2]`. Отсортируйте его.
# # s = [3, 1, 4, 2]
# # s.sort()
# # print(s)
#
# # 37. Объедините два списка `[1, 2]` и `[3, 4]` в один.
# # list1 = [1, 2]
# # list2 = [3, 4]
# # print(list1 + list2)
#
# # 38. Найдите сумму элементов списка `[5, 10, 15, 20]`.
# # s = [5, 10, 15, 20]
# # print(sum(s))
# # 39. Удалите дубликаты из списка `[1, 2, 2, 3, 4, 4]`.
# # s = [1, 2, 2, 3, 4, 4]
# # print(list(set(s)))
# # 40. Разверните список `[1, 2, 3, 4]` в обратном порядке.
# # s = [1, 2, 3, 4]
# # s.reverse()
# # print(s)
#
# # # Сложные:
# # 41. Найдите наибольший и наименьший элементы в списке.
# # s = [10, 5, 20, 8]
# # print(max(s), min(s))
#
# # 42. Отфильтруйте только четные числа из списка `[1, 2, 3, 4, 5, 6]`.
# # s = [1, 2, 3, 4, 5, 6]
# # ["n % 2" if s == 0]
# # print(s)
# # 43. Создайте список квадратов чисел от `1` до `10`.
#
# # 44. Дан список чисел. Замените все отрицательные числа на `0`.
# # 45. Посчитайте количество вхождений элемента `5` в списке `[1, 5, 3, 5, 5, 2]`.
# # s = [1, 5, 3, 5, 5, 2]
# # print(s.count(5))
# # ### Словари ###
# #
# # # Легкие:
# # 46. Создайте словарь `{"имя": "Анна", "возраст": 25}` и выведите имя.
# # p = {"имя": "Анна",
# #           "возраст": 25}
# # print(p["имя"])
# # # 47. Добавьте в словарь ключ `"город"` со значением `"Москва"`.
# # p["город"] = "Москва"
# # print(p)
# # # 48. Удалите ключ `"возраст"` из словаря.
# # del p["возраст"]
# # print(p)
# # # 49. Проверьте, есть ли ключ `"зарплата"` в словаре.
# # print("зарплата" in p)
# # 50. Выведите все ключи словаря `{"a": 1, "b": 2, "c": 3}`.
# # d = {"a": 1, "b": 2, "c": 3}
# # print(d.keys())
# # # Средние:
# # 51. Объедините два словаря `{"a": 1}` и `{"b": 2}`.
# # d1 = {"a": 1}
# # d2 = {"b": 2}
# # m = {d1 +d2}
# # print(m)
#
# # 52. Инвертируйте словарь (`{1: "a", 2: "b"}` → `{"a": 1, "b": 2}`).
# # d = {1: "a", 2: "b"}
# #
# # # 53. Посчитайте сумму всех значений в словаре `{"яблоко": 50, "банан": 30}`.
# # fruits = {"яблоко": 50, "банан": 30}
# # print(sum(fruits.values()))
#
# # 54. Отсортируйте словарь по ключам.
# # 55. Создайте словарь из списков `["a", "b"]` и `[1, 2]` (ключи — первый список).
# d1 = ["a", "b"]
# d2 = [1, 2]
#
# # # Сложные:
# # 56. Найдите ключ с максимальным значением в словаре.
# # 57. Удалите все элементы с пустыми значениями из словаря.
# # 58. Сгенерируйте словарь, где ключи — числа от `1` до `5`, а значения — их квадраты.
# # 59. Дан список слов. Создайте словарь `{слово: длина_слова}`.
# # 60. Сравните два словаря на идентичность.
# #
# # ### Кортежи и множества ###
# #
# # # Легкие:
# # 61. Создайте кортеж `(1, 2, 3)` и выведите его длину.
# t = (1, 2, 3)
# print(len(t))
#
# # 62. Преобразуйте список `[4, 5, 6]` в кортеж.
# t = tuple([4, 5, 6])
# print(t)
# # 63. Создайте множество `{1, 2, 3}` и добавьте `4`.
# s = {1, 2, 3}
# s.add(4)
# print(s)
# # 64. Проверьте, есть ли `5` в множестве `{2, 3, 4}`.
# print(5 in {2, 3, 4})
# # 65. Найдите общие элементы множеств `{1, 2, 3}` и `{3, 4, 5}`.
# s1 = {1, 2, 3}
# s2 = {3, 4, 5}
# print(s1 & s2)
# # # Средние:
# # 66. Объедините два множества `{1, 2}` и `{2, 3}`.
# print({1, 2} | {2, 3}) #знак не проходили
# # 67. Удалите элемент `3` из множества `{1, 2, 3, 4}`.
# s = {1, 2, 3, 4}
# s.discard(3)
# print(s)
# # 68. Проверьте, является ли множество `{1, 2}` подмножеством `{1, 2, 3}`.
# # 69. Создайте неизменяемое множество (frozenset).
# # 70. Посчитайте количество уникальных слов в списке `["яблоко", "банан", "яблоко"]`.
# words = ["яблоко", "банан", "яблоко"]
# print(len(set(words)))
# # # Сложные:
# # 71. Удалите дубликаты из списка, используя множества.
# # 72. Найдите элементы, которые есть только в одном из двух множеств.
# # 73. Сгенерируйте все возможные подмножества множества `{1, 2}`.
# # 74. Проверьте, являются ли два множества непересекающимися.
# # 75. Дан кортеж чисел. Найдите минимальный и максимальный элементы.
# #
# # ### Комбинированные задачи (сложные) ###
# #
# # 76. Создайте список словарей (каждый словарь — информация о человеке).
# # 77. Отсортируйте список словарей по ключу `"возраст"`.
# # 78. Из списка чисел создайте словарь `{число: его_квадрат}`.
# # 79. Объедините два списка в словарь (`keys = ["a", "b"]`, `values = [1, 2]`).
# # 80. Найдите самое часто встречающееся слово в тексте (строка → список слов → счетчик).
# # 81. Создайте вложенный словарь (например, данные о студентах с предметами и оценками).
# # 82. Преобразуйте список кортежей `[("a", 1), ("b", 2)]` в словарь.
# # 83. Отфильтруйте словарь, оставив только элементы со значениями больше `10`.
# # 84. Сгенерируйте словарь, где ключи — буквы алфавита, а значения — их ASCII-коды.
# # 85. Напишите функцию, которая объединяет два списка в словарь (проверяя длину).
# # 86. Дан список чисел. Создайте словарь `{число: количество_вхождений}`.
# # 87. Найдите пересечение ключей двух словарей.
# # 88. Отсортируйте словарь по значениям в порядке убывания.
# # 89. Создайте словарь из строки, где ключи — символы, а значения — их количество в строке.
# # 90. Реализуйте поиск по значению в словаре (выведите ключ по заданному значению).
# # 91. Создайте кортеж из списка, удалив повторяющиеся элементы.
# # 92. Объедините несколько словарей в один (используйте `update` или `**`).
# # 93. Проверьте, все ли значения в словаре уникальны.
# # 94. Разделите словарь на два: в одном ключи с четными значениями, в другом — с нечетными.
# # 95. Преобразуйте словарь в список кортежей `(ключ, значение)`.
# # 96. Напишите функцию, которая инвертирует вложенный словарь (меняет местами ключи и значения).
# # 97. Создайте множество из списка, но с условием (например, только четные числа).
# # 98. Найдите симметричную разность трех множеств.
# # 99. Реализуйте проверку на анаграмму (используйте множества и словари).
# # 100. Создайте генератор словарей для хранения таблицы умножения (ключи — пары чисел).
