"""
Урок 12: Прерывание циклов (break, continue, else)
"""

# 1. break - досрочное завершение цикла
"""
Оператор break прерывает выполнение цикла и выходит из него.
# """
# for i in range(1, 11):
#     if i == 5:
#         print("Остановлено на", i)
#         break  # Выход из цикла при i == 5
#     print(i)  # Выведет 1, 2, 3, 4

# 2. continue - пропуск итерации
"""
Оператор continue пропускает текущую итерацию цикла и переходит к следующей.
# """
# for i in range(1, 6):
#     if i == 3:
#         continue  # Пропускаем число 3
#     print(i)  # Выведет 1, 2, 4, 5
#
# # 3. else в циклах
# """
# Блок else выполняется, если цикл завершился без использования break.
# """
# for i in range(1, 6):
#     print(i)
# else:
#     print("Цикл завершился без прерываний")  # Этот код выполнится
#
# for i in range(1, 6):
#     if i == 3:
#         break  # Прерываем цикл
#     print(i)
# else:
#     print("Этот код не выполнится, так как цикл прерван")

# ОЗНАКОМИТЕЛЬНЫЕ ЗАДАЧИ (10 штук)

# 1. Используя break, прервите цикл при достижении числа 7.
# for i in range(1,11):
#     if i == 7:
#         break
#     print(i)
#
# # 2. Используя continue, пропустите число 4 в цикле от 1 до 10.
# for i in range(1, 10):
#     if i == 4:
#         continue
#     print(i)

# 3. Выведите все числа от 1 до 10, но остановитесь при первом четном числе.
# for i in range(1, 11):
#     print(i)
#     if i % 2 == 0:
#         break
# # 4. Найдите первое число, делящееся на 7 в диапазоне 10-100.
# for i in range(10, 101):
#     if i % 7 == 0:
#         print(i)
#         break
# # 5. Используйте else в цикле, чтобы определить, было ли найдено число 5 в списке [1, 2, 3, 6, 7].
# numbers = [1, 2, 3, 6, 7]
# for num in numbers:
#     if num == 5:
#         print("число 5 найдено!")
#     break
# else:
#     print("число 5 не найдено!")
# # 6. Выведите все буквы слова "Python", кроме "o".
# for i in "Python":
#     if i == "o":
#         continue
#     print(i, end=" ")
# # 7. Используйте continue, чтобы вывести все нечетные числа от 1 до 20.
# for i in range(1, 21):
#     if i % 2 == 0:
#         continue
#     print(i)
# 8. Используйте break, чтобы найти первое число, кратное 13 в диапазоне 1-100.
# for i in range(1, 101):
#     if i % 13 == 0:
#         print(i)
#         break
# 9. Используйте else в while-цикле, чтобы определить, был ли завершен поиск числа.
# n = 1
# while n < 10:
#     if n == 7:
#         print("7")
#         break
#     n += 1
# else:
#     print("Цикл завершился 7.")
# 10. Напишите программу, которая завершает ввод пользователя после слова "стоп".
# while True:
#     text = input("Текст: ")
#     if text == "стоп":
#         print("Выход из программы.")
#         break
# # ДОМАШНЕЕ ЗАДАНИЕ (40 задач)

# 1. Прервите цикл, если пользователь ввел отрицательное число.
# while True:
#     i = int(input("Число: "))
#     if i > 0:
#         print("отрицательный число")
#         break
#

# 2. Используйте continue, чтобы пропустить все гласные буквы в введенной строке.
v = "eyuioa"
text = input("Введите строку: ")
r = ""
for i in text:
    if i in v:
        continue
    r = i
print("Результат без гласных:", r)
# 3. Напишите программу, которая запрашивает у пользователя числа, суммируя их, пока не введено 0.
while True:
    number = int(input("число: "))
    if number == 0:
        break
    total += number

print("Сумма чисел:", total)
# 4. Найдите первое число больше 50, которое делится на 9 без остатка.
for i in range(51, 101):
    if i % 9 == 0:
        print("Первое число больше 50, делящееся на 9:", i)
        break
# 5. Выведите все числа от 10 до 1, пропуская числа, делящиеся на 3.
for i in range(10, 0, -1):
    if i % 3 == 0:
        continue
    print(i)
# 6. Проверьте, содержит ли список число 10, используя else в for.
numbers = [1, 3, 5, 7, 8]
for num in numbers:
    if num == 10:
        print("Число 10 найдено!")
        break
else:
    print("Число 10 не найдено.")
# 7. Выведите только четные числа из списка [1, 3, 4, 7, 8, 10].
nums = [1, 3, 4, 7, 8, 10]

for num in nums:
    if num % 2 == 0:
        print(num)

# 8. Найдите первый символ "а" в строке и завершите поиск.
text = input("Ведите строку: ")
for char in text:
    if  char == "a":
        print("Первая 'a' найдена")
        break

# 9. Прервите цикл, если число из списка [2, 4, 6, 8, 9] делится на 5.
numbers = [2, 4, 6, 8, 9]
for num in numbers:
    if num % 5 == 0:
        print("Найдено число", num)
        break

# 10. Выведите первые 5 чисел Фибоначчи, но остановитесь, если встретите число больше 10.

# 11. Напишите программу, которая ищет первое четное число в списке и прекращает выполнение.
numbers =
# 12. Используйте while, чтобы выводить числа от 100 до 1, пропуская числа, делящиеся на 5.
# 13. Используйте break в бесконечном цикле, если число больше 100.
# 14. Переберите список и пропустите все элементы, содержащие букву "e".
# 15. Используйте else в цикле while, который завершится без break.
# 16. Найдите первое число, большее 1000, которое делится на 37 без остатка.
# 17. Запросите у пользователя пароль и прекратите цикл, если введен правильный пароль.
# 18. Используйте continue, чтобы пропускать числа, которые делятся на 4.
# 19. Прервите цикл, если сумма всех чисел превысила 200.
# 20. Выведите таблицу умножения на 9, но прекратите после 9 x 5.
# 21. Найдите первую букву в строке, которая не является заглавной.
# 22. Переберите список имен и пропустите все, которые начинаются на "A".
# 23. Используйте break, чтобы прервать выполнение при нахождении простого числа.
# 24. Используйте else в цикле for, чтобы проверить, все ли числа четные.
# 25. Запросите у пользователя числа, и прекратите ввод, если сумма превысила 1000.
# 26. Переберите все цифры числа и остановитесь, если встретите 7.
# 27. Напишите программу, которая ищет первое четное число среди случайных чисел.
# 28. Используйте continue, чтобы пропустить числа, оканчивающиеся на 5.
# 29. Выведите буквы слова "Programming", пропуская гласные.
# 30. Напишите игру, где пользователь вводит числа, и проигрывает при вводе отрицательного числа.
# 31. Выведите все делители числа 100, но прекратите при нахождении первого простого делителя.
# 32. Найдите сумму всех цифр числа, но прекратите, если цифра равна 0.
# 33. Переберите список дат и прекратите выполнение, если встретится 1 января.
# 34. Используйте while для проверки пароля, запрашивая ввод, пока он не будет правильным.
# 35. Найдите первую букву в строке, которая является заглавной, и прекратите выполнение.
# 36. Прервите цикл, если встречается два подряд идущих одинаковых числа.
# 37. Используйте break для выхода из вложенного цикла, если сумма элементов превышает 50.
# 38. Переберите числа от 1 до 100, останавливаясь на первом числе, делящемся на 17.
# 39. Используйте continue для пропуска всех слов, содержащих букву "z".
# 40. Переберите список и прекратите выполнение, если элемент встречается второй раз.

# Дополнительные задачи с вложенными циклами
# 1. Нарисуйте треугольник из символов "*" с помощью вложенного цикла.
# 2. Создайте шахматную доску 8x8, используя символы "#" и ".".
# 3. Переберите числа от 1 до 100 и найдите первую пару чисел, сумма которых равна 50.
# 4. Переберите строку и найдите первую букву, которая встречается дважды.
# 5. Переберите список списков и найдите первый вложенный список, содержащий отрицательное число.
